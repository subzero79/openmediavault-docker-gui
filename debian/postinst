#!/bin/sh

set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

OMV_FSTAB_DM_NAME="conf.system.filesystem.mountpoint"
OMV_DOCKER_BIND_MOUNT="/var/lib/docker/openmediavault"

clean_docker_mount_bind () {
  echo "Deleting fstab entry ${OMV_DOCKER_BIND_UUID} from the database..."
  omv-confdbadm delete --uuid ${OMV_DOCKER_BIND_UUID} ${OMV_FSTAB_DM_NAME}
  echo "Regenerating fstab file..."
  omv-mkconf fstab
  echo "Regenerating the plugin setting for docker root directory in /etc/default/docker"
  omv-mkconf docker
}


case "$1" in
  configure)

    SERVICE_XPATH_NAME="docker"
    SERVICE_XPATH="/config/services/${SERVICE_XPATH_NAME}"

    #Setup initial OMV configuration
    if ! omv_config_exists "/config/services/docker"; then
      echo "Initialize configuration"
      omv_config_add_node "/config/services" "${SERVICE_XPATH_NAME}"
      omv_config_add_key "${SERVICE_XPATH}" "sharedfolderref" ""
      omv_config_add_key "${SERVICE_XPATH}" "enabled" "0"
      omv_config_add_key "${SERVICE_XPATH}" "cwarn" "1"
    fi

    ##this needs to be updated in the next version after 4.0.1
    if [ -n "$2" ]; then
      omv-confdbadm migrate "conf.service.docker" "${2}"
    fi

    #Remove deprecated stuff to ensure clean installation
    update-rc.d -f openmediavault-docker-gui remove
    rm -f /etc/init.d/openmediavault-docker-gui
    if [ -f "/etc/rc.local" ];then
      sed -i '/### Do not change these lines\. They are added and updated by the OMV Docker GUI plugin\./,$d' /etc/rc.local
    fi
    sed -i '/### Do not change theese lines. They are added and updated by the OMV Docker GUI plugin./,/### End of OMV Docker GUI plugin changes./d' /etc/crontab
    sed -i '/DOCKER_OPTS="$DOCKER_OPTS $OMVDOCKER_API $OMVDOCKER_IMAGE_PATH"/d' /etc/default/docker

    #stop docker daemon to unmount any possible mount bind
    systemctl stop docker.socket
    systemctl stop docker
    ### After this section we need to remove fstab entries and unmount any old binds
    OMV_DOCKER_BIND_MOUNT_UUID=$(omv-confdbadm read ${OMV_FSTAB_DM_NAME} | \
                                  jq -r \
                                  --arg bind_path $OMV_DOCKER_BIND_MOUNT \
                                  '.[]|select(.dir == $bind_path )|.uuid')



    if [ ! -z "$OMV_DOCKER_BIND_MOUNT_UUID" ] ;then
      if mountpoint -q -- "$OMV_DOCKER_BIND_MOUNT"; then
        echo "There is an alternate Docker root directory defined in the plugin and is mounted, proceeding to unmount..."
        echo "Unmounting ${OMV_DOCKER_BIND_MOUNT}"
        umount -f -l ${OMV_DOCKER_BIND_MOUNT}
        clean_docker_mount_bind
      else
        echo "The Docker root directory is not mounted..."
        clean_docker_mount_bind
      fi
    else
      echo "No alternative Docker root directory registered in the database..."
    fi

    systemctl daemon-reload
    systemctl start docker
    
    echo "The plugin no longer uses the docker tcp api port, if you still need this you need to configure it manually by editing /etc/default/docker"
    echo "Due to changes in the plugin web configuration panel the browser cache needs to be emptied"

    dpkg-trigger update-fixperms    
    dpkg-trigger update-locale

    ;;

abort-upgrade|abort-remove|abort-deconfigure)
    ;;

*)
    echo "postinst called with unknown argument \`$1'" >&2
    exit 1
    ;;
esac

#DEBHELPER#

exit 0
